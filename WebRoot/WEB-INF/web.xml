<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>SSM</display-name>
	<welcome-file-list>
    	<welcome-file>login.jsp</welcome-file>
  	</welcome-file-list>
	<!-- springMVC请求乱码处理,针对post请求有效 ，get在tomcat8.0版本一下依然会乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 前端核心控制器 DispatcherServlet -->
	<servlet>
		<servlet-name>DispatcherServlet</servlet-name>
		<!--DispatcherServlet类的全路径  -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 指定MVC配置文件的位置 -->
		<init-param>
			<param-name>ContextConfigLocation</param-name>
			<param-value>\WEB-INF\classes\springMVC-servlet.xml</param-value>
		</init-param>
		<!-- 设置servlet创建对象的时机，默认是第一次访问创建对象，如果设置，那么服务器一启动，就会创建servlet对象 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 可以加载静态资源，不对js,css等进行拦截，还可以通过spring-mvc.xml进行配置，这种方式没实现 -->
	<servlet-mapping> 
        <servlet-name>default</servlet-name> 
        <url-pattern>*.css</url-pattern> 
    </servlet-mapping> 
    <servlet-mapping> 
        <servlet-name>default</servlet-name> 
        <url-pattern>*.js</url-pattern> 
    </servlet-mapping> 
  	<servlet-mapping> 
        <servlet-name>default</servlet-name> 
        <url-pattern>*.gif</url-pattern> 
    </servlet-mapping>
    <servlet-mapping> 
        <servlet-name>default</servlet-name> 
        <url-pattern>*.png</url-pattern> 
    </servlet-mapping>
    <servlet-mapping> 
        <servlet-name>default</servlet-name> 
        <url-pattern>*.jpg</url-pattern> 
    </servlet-mapping>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>\WEB-INF\classes\applicationContext.xml</param-value>
    </context-param>
</web-app>